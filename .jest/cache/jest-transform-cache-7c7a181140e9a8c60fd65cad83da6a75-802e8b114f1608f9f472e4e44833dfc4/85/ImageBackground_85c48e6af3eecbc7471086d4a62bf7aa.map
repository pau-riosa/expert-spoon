{"version":3,"sources":["ImageBackground.js"],"names":["Image","require","React","StyleSheet","View","ImageBackground","_viewRef","_captureRef","ref","props","viewRef","setNativeProps","children","style","imageStyle","imageRef","absoluteFill","width","height","Component","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,yBAAD,CAApB;;IA0BMI,e;;;;;;;;;;;;;;;UASJC,Q,GAA2C,I;;UAE3CC,W,GAAc,UAAAC,GAAG,EAAI;AACnB,YAAKF,QAAL,GAAgBE,GAAhB;AACD,K;;;;;;;mCAZcC,K,EAAe;AAE5B,UAAMC,OAAO,GAAG,KAAKJ,QAArB;;AACA,UAAII,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACC,cAAR,CAAuBF,KAAvB;AACD;AACF;;;6BAQoB;AAAA,wBACuC,KAAKA,KAD5C;AAAA,UACZG,QADY,eACZA,QADY;AAAA,UACFC,KADE,eACFA,KADE;AAAA,UACKC,UADL,eACKA,UADL;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,UAC8BN,KAD9B;AAGnB,aACE,oBAAC,IAAD;AACE,QAAA,gCAAgC,EAAE,IADpC;AAEE,QAAA,KAAK,EAAEI,KAFT;AAGE,QAAA,GAAG,EAAE,KAAKN;AAHZ,SAIE,oBAAC,KAAD,6BACME,KADN;AAEE,QAAA,KAAK,EAAE,CACLN,UAAU,CAACa,YADN,EAEL;AAQEC,UAAAA,KAAK,EAAEJ,KAAK,CAACI,KARf;AASEC,UAAAA,MAAM,EAAEL,KAAK,CAACK;AAThB,SAFK,EAaLJ,UAbK,CAFT;AAiBE,QAAA,GAAG,EAAEC;AAjBP,SAJF,EAuBGH,QAvBH,CADF;AA2BD;;;EA7C2BV,KAAK,CAACiB,S;;AAgDpCC,MAAM,CAACC,OAAP,GAAiBhB,eAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Image = require('./Image');\nconst React = require('react');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://facebook.github.io/react-native/img/opengraph.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component<$FlowFixMeProps> {\n  setNativeProps(props: Object) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?React.ElementRef<typeof View> = null;\n\n  _captureRef = ref => {\n    this._viewRef = ref;\n  };\n\n  render(): React.Node {\n    const {children, style, imageStyle, imageRef, ...props} = this.props;\n\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        style={style}\n        ref={this._captureRef}>\n        <Image\n          {...props}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              width: style.width,\n              height: style.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n"]}