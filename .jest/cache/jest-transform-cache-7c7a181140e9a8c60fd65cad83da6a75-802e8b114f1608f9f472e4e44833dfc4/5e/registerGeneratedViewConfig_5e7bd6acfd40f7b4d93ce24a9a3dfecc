72312b2023ca27b2928782fe0ebd76d3
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _verifyComponentAttributeEquivalence = _interopRequireDefault(require("./verifyComponentAttributeEquivalence"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ReactNativeViewConfigRegistry = require('../Renderer/shims/ReactNativeViewConfigRegistry');

var ReactNativeViewViewConfig = require('../Components/View/ReactNativeViewViewConfig');

function registerGeneratedViewConfig(componentName, viewConfig) {
  var mergedViewConfig = {
    uiViewClassName: componentName,
    Commands: {},
    bubblingEventTypes: _objectSpread({}, ReactNativeViewViewConfig.bubblingEventTypes, {}, viewConfig.bubblingEventTypes || {}),
    directEventTypes: _objectSpread({}, ReactNativeViewViewConfig.directEventTypes, {}, viewConfig.directEventTypes || {}),
    validAttributes: _objectSpread({}, ReactNativeViewViewConfig.validAttributes, {}, viewConfig.validAttributes || {})
  };
  ReactNativeViewConfigRegistry.register(componentName, function () {
    (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
    return mergedViewConfig;
  });
}

module.exports = registerGeneratedViewConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZy5qcyJdLCJuYW1lcyI6WyJSZWFjdE5hdGl2ZVZpZXdDb25maWdSZWdpc3RyeSIsInJlcXVpcmUiLCJSZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnIiwicmVnaXN0ZXJHZW5lcmF0ZWRWaWV3Q29uZmlnIiwiY29tcG9uZW50TmFtZSIsInZpZXdDb25maWciLCJtZXJnZWRWaWV3Q29uZmlnIiwidWlWaWV3Q2xhc3NOYW1lIiwiQ29tbWFuZHMiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJkaXJlY3RFdmVudFR5cGVzIiwidmFsaWRBdHRyaWJ1dGVzIiwicmVnaXN0ZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7O0FBSUE7Ozs7OztBQUZBLElBQU1BLDZCQUE2QixHQUFHQyxPQUFPLENBQUMsaURBQUQsQ0FBN0M7O0FBQ0EsSUFBTUMseUJBQXlCLEdBQUdELE9BQU8sQ0FBQyw4Q0FBRCxDQUF6Qzs7QUFnQ0EsU0FBU0UsMkJBQVQsQ0FDRUMsYUFERixFQUVFQyxVQUZGLEVBR0U7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRztBQUN2QkMsSUFBQUEsZUFBZSxFQUFFSCxhQURNO0FBRXZCSSxJQUFBQSxRQUFRLEVBQUUsRUFGYTtBQUd2QkMsSUFBQUEsa0JBQWtCLG9CQUNiUCx5QkFBeUIsQ0FBQ08sa0JBRGIsTUFLWkosVUFBVSxDQUFDSSxrQkFBWCxJQUFpQyxFQUxyQixDQUhLO0FBVXZCQyxJQUFBQSxnQkFBZ0Isb0JBQ1hSLHlCQUF5QixDQUFDUSxnQkFEZixNQUtWTCxVQUFVLENBQUNLLGdCQUFYLElBQStCLEVBTHJCLENBVk87QUFpQnZCQyxJQUFBQSxlQUFlLG9CQUNWVCx5QkFBeUIsQ0FBQ1MsZUFEaEIsTUFLVE4sVUFBVSxDQUFDTSxlQUFYLElBQThCLEVBTHJCO0FBakJRLEdBQXpCO0FBMEJBWCxFQUFBQSw2QkFBNkIsQ0FBQ1ksUUFBOUIsQ0FBdUNSLGFBQXZDLEVBQXNELFlBQU07QUFDMUQsc0RBQW9DQSxhQUFwQyxFQUFtREUsZ0JBQW5EO0FBRUEsV0FBT0EsZ0JBQVA7QUFDRCxHQUpEO0FBS0Q7O0FBRURPLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlgsMkJBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3ROYXRpdmVWaWV3Q29uZmlnUmVnaXN0cnkgPSByZXF1aXJlKCcuLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVZpZXdDb25maWdSZWdpc3RyeScpO1xuY29uc3QgUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZyA9IHJlcXVpcmUoJy4uL0NvbXBvbmVudHMvVmlldy9SZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnJyk7XG5pbXBvcnQgdmVyaWZ5Q29tcG9uZW50QXR0cmlidXRlRXF1aXZhbGVuY2UgZnJvbSAnLi92ZXJpZnlDb21wb25lbnRBdHRyaWJ1dGVFcXVpdmFsZW5jZSc7XG5cbmV4cG9ydCB0eXBlIEdlbmVyYXRlZFZpZXdDb25maWcgPSB7XG4gIHVpVmlld0NsYXNzTmFtZTogc3RyaW5nLFxuICBidWJibGluZ0V2ZW50VHlwZXM/OiAkUmVhZE9ubHk8e1xuICAgIFtldmVudE5hbWU6IHN0cmluZ106ICRSZWFkT25seTx7fFxuICAgICAgcGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6ICRSZWFkT25seTx7fFxuICAgICAgICBjYXB0dXJlZDogc3RyaW5nLFxuICAgICAgICBidWJibGVkOiBzdHJpbmcsXG4gICAgICB8fT4sXG4gICAgfH0+LFxuICAgIC4uLixcbiAgfT4sXG4gIGRpcmVjdEV2ZW50VHlwZXM/OiAkUmVhZE9ubHk8e1xuICAgIFtldmVudE5hbWU6IHN0cmluZ106ICRSZWFkT25seTx7fFxuICAgICAgcmVnaXN0cmF0aW9uTmFtZTogc3RyaW5nLFxuICAgIHx9PixcbiAgICAuLi4sXG4gIH0+LFxuICB2YWxpZEF0dHJpYnV0ZXM/OiB7XG4gICAgW3Byb3BOYW1lOiBzdHJpbmddOlxuICAgICAgfCB0cnVlXG4gICAgICB8ICRSZWFkT25seTx7fFxuICAgICAgICAgIGRpZmY/OiA8VD4oYXJnMTogYW55LCBhcmcyOiBhbnkpID0+IGJvb2xlYW4sXG4gICAgICAgICAgcHJvY2Vzcz86IChhcmcxOiBhbnkpID0+IGFueSxcbiAgICAgICAgfH0+LFxuICAgIC4uLixcbiAgfSxcbiAgLi4uXG59O1xuXG5mdW5jdGlvbiByZWdpc3RlckdlbmVyYXRlZFZpZXdDb25maWcoXG4gIGNvbXBvbmVudE5hbWU6IHN0cmluZyxcbiAgdmlld0NvbmZpZzogR2VuZXJhdGVkVmlld0NvbmZpZyxcbikge1xuICBjb25zdCBtZXJnZWRWaWV3Q29uZmlnID0ge1xuICAgIHVpVmlld0NsYXNzTmFtZTogY29tcG9uZW50TmFtZSxcbiAgICBDb21tYW5kczoge30sXG4gICAgYnViYmxpbmdFdmVudFR5cGVzOiB7XG4gICAgICAuLi5SZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnLmJ1YmJsaW5nRXZlbnRUeXBlcyxcbiAgICAgIC8qICRGbG93Rml4TWUoPj0wLjExMS4wIHNpdGU9cmVhY3RfbmF0aXZlX2ZiKSBUaGlzIGNvbW1lbnQgc3VwcHJlc3NlcyBhblxuICAgICAgICogZXJyb3IgZm91bmQgd2hlbiBGbG93IHYwLjExMSB3YXMgZGVwbG95ZWQuIFRvIHNlZSB0aGUgZXJyb3IsIGRlbGV0ZVxuICAgICAgICogdGhpcyBjb21tZW50IGFuZCBydW4gRmxvdy4gKi9cbiAgICAgIC4uLih2aWV3Q29uZmlnLmJ1YmJsaW5nRXZlbnRUeXBlcyB8fCB7fSksXG4gICAgfSxcbiAgICBkaXJlY3RFdmVudFR5cGVzOiB7XG4gICAgICAuLi5SZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnLmRpcmVjdEV2ZW50VHlwZXMsXG4gICAgICAvKiAkRmxvd0ZpeE1lKD49MC4xMTEuMCBzaXRlPXJlYWN0X25hdGl2ZV9mYikgVGhpcyBjb21tZW50IHN1cHByZXNzZXMgYW5cbiAgICAgICAqIGVycm9yIGZvdW5kIHdoZW4gRmxvdyB2MC4xMTEgd2FzIGRlcGxveWVkLiBUbyBzZWUgdGhlIGVycm9yLCBkZWxldGVcbiAgICAgICAqIHRoaXMgY29tbWVudCBhbmQgcnVuIEZsb3cuICovXG4gICAgICAuLi4odmlld0NvbmZpZy5kaXJlY3RFdmVudFR5cGVzIHx8IHt9KSxcbiAgICB9LFxuICAgIHZhbGlkQXR0cmlidXRlczoge1xuICAgICAgLi4uUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZy52YWxpZEF0dHJpYnV0ZXMsXG4gICAgICAvKiAkRmxvd0ZpeE1lKD49MC4xMTEuMCBzaXRlPXJlYWN0X25hdGl2ZV9mYikgVGhpcyBjb21tZW50IHN1cHByZXNzZXMgYW5cbiAgICAgICAqIGVycm9yIGZvdW5kIHdoZW4gRmxvdyB2MC4xMTEgd2FzIGRlcGxveWVkLiBUbyBzZWUgdGhlIGVycm9yLCBkZWxldGVcbiAgICAgICAqIHRoaXMgY29tbWVudCBhbmQgcnVuIEZsb3cuICovXG4gICAgICAuLi4odmlld0NvbmZpZy52YWxpZEF0dHJpYnV0ZXMgfHwge30pLFxuICAgIH0sXG4gIH07XG5cbiAgUmVhY3ROYXRpdmVWaWV3Q29uZmlnUmVnaXN0cnkucmVnaXN0ZXIoY29tcG9uZW50TmFtZSwgKCkgPT4ge1xuICAgIHZlcmlmeUNvbXBvbmVudEF0dHJpYnV0ZUVxdWl2YWxlbmNlKGNvbXBvbmVudE5hbWUsIG1lcmdlZFZpZXdDb25maWcpO1xuXG4gICAgcmV0dXJuIG1lcmdlZFZpZXdDb25maWc7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZztcbiJdfQ==