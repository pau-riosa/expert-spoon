eff18eb41a63ed667c74e592ff65abf2
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var EventEmitter = require('../vendor/emitter/EventEmitter');

var Platform = require('../Utilities/Platform');

var RCTDeviceEventEmitter = require('./RCTDeviceEventEmitter');

var invariant = require('invariant');

var NativeEventEmitter = function (_EventEmitter) {
  (0, _inherits2.default)(NativeEventEmitter, _EventEmitter);

  var _super = _createSuper(NativeEventEmitter);

  function NativeEventEmitter(nativeModule) {
    var _this;

    (0, _classCallCheck2.default)(this, NativeEventEmitter);
    _this = _super.call(this, RCTDeviceEventEmitter.sharedSubscriber);

    if (Platform.OS === 'ios') {
      invariant(nativeModule, 'Native module cannot be null.');
      _this._nativeModule = nativeModule;
    }

    return _this;
  }

  (0, _createClass2.default)(NativeEventEmitter, [{
    key: "addListener",
    value: function addListener(eventType, listener, context) {
      if (this._nativeModule != null) {
        this._nativeModule.addListener(eventType);
      }

      return (0, _get2.default)((0, _getPrototypeOf2.default)(NativeEventEmitter.prototype), "addListener", this).call(this, eventType, listener, context);
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners(eventType) {
      invariant(eventType, 'eventType argument is required.');
      var count = this.listeners(eventType).length;

      if (this._nativeModule != null) {
        this._nativeModule.removeListeners(count);
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeEventEmitter.prototype), "removeAllListeners", this).call(this, eventType);
    }
  }, {
    key: "removeSubscription",
    value: function removeSubscription(subscription) {
      if (this._nativeModule != null) {
        this._nativeModule.removeListeners(1);
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeEventEmitter.prototype), "removeSubscription", this).call(this, subscription);
    }
  }]);
  return NativeEventEmitter;
}(EventEmitter);

module.exports = NativeEventEmitter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdGl2ZUV2ZW50RW1pdHRlci5qcyJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJyZXF1aXJlIiwiUGxhdGZvcm0iLCJSQ1REZXZpY2VFdmVudEVtaXR0ZXIiLCJpbnZhcmlhbnQiLCJOYXRpdmVFdmVudEVtaXR0ZXIiLCJuYXRpdmVNb2R1bGUiLCJzaGFyZWRTdWJzY3JpYmVyIiwiT1MiLCJfbmF0aXZlTW9kdWxlIiwiZXZlbnRUeXBlIiwibGlzdGVuZXIiLCJjb250ZXh0IiwiYWRkTGlzdGVuZXIiLCJjb3VudCIsImxpc3RlbmVycyIsImxlbmd0aCIsInJlbW92ZUxpc3RlbmVycyIsInN1YnNjcmlwdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGdDQUFELENBQTVCOztBQUNBLElBQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLHVCQUFELENBQXhCOztBQUNBLElBQU1FLHFCQUFxQixHQUFHRixPQUFPLENBQUMseUJBQUQsQ0FBckM7O0FBRUEsSUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7SUFjTUksa0I7Ozs7O0FBR0osOEJBQVlDLFlBQVosRUFBeUM7QUFBQTs7QUFBQTtBQUN2Qyw4QkFBTUgscUJBQXFCLENBQUNJLGdCQUE1Qjs7QUFDQSxRQUFJTCxRQUFRLENBQUNNLEVBQVQsS0FBZ0IsS0FBcEIsRUFBMkI7QUFDekJKLE1BQUFBLFNBQVMsQ0FBQ0UsWUFBRCxFQUFlLCtCQUFmLENBQVQ7QUFDQSxZQUFLRyxhQUFMLEdBQXFCSCxZQUFyQjtBQUNEOztBQUxzQztBQU14Qzs7OztnQ0FHQ0ksUyxFQUNBQyxRLEVBQ0FDLE8sRUFDcUI7QUFDckIsVUFBSSxLQUFLSCxhQUFMLElBQXNCLElBQTFCLEVBQWdDO0FBQzlCLGFBQUtBLGFBQUwsQ0FBbUJJLFdBQW5CLENBQStCSCxTQUEvQjtBQUNEOztBQUNELDZIQUF5QkEsU0FBekIsRUFBb0NDLFFBQXBDLEVBQThDQyxPQUE5QztBQUNEOzs7dUNBRWtCRixTLEVBQW1CO0FBQ3BDTixNQUFBQSxTQUFTLENBQUNNLFNBQUQsRUFBWSxpQ0FBWixDQUFUO0FBQ0EsVUFBTUksS0FBSyxHQUFHLEtBQUtDLFNBQUwsQ0FBZUwsU0FBZixFQUEwQk0sTUFBeEM7O0FBQ0EsVUFBSSxLQUFLUCxhQUFMLElBQXNCLElBQTFCLEVBQWdDO0FBQzlCLGFBQUtBLGFBQUwsQ0FBbUJRLGVBQW5CLENBQW1DSCxLQUFuQztBQUNEOztBQUNELDZIQUF5QkosU0FBekI7QUFDRDs7O3VDQUVrQlEsWSxFQUFtQztBQUNwRCxVQUFJLEtBQUtULGFBQUwsSUFBc0IsSUFBMUIsRUFBZ0M7QUFDOUIsYUFBS0EsYUFBTCxDQUFtQlEsZUFBbkIsQ0FBbUMsQ0FBbkM7QUFDRDs7QUFDRCw2SEFBeUJDLFlBQXpCO0FBQ0Q7OztFQXBDOEJsQixZOztBQXVDakNtQixNQUFNLENBQUNDLE9BQVAsR0FBaUJmLGtCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJy4uL3ZlbmRvci9lbWl0dGVyL0V2ZW50RW1pdHRlcicpO1xuY29uc3QgUGxhdGZvcm0gPSByZXF1aXJlKCcuLi9VdGlsaXRpZXMvUGxhdGZvcm0nKTtcbmNvbnN0IFJDVERldmljZUV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJy4vUkNURGV2aWNlRXZlbnRFbWl0dGVyJyk7XG5cbmNvbnN0IGludmFyaWFudCA9IHJlcXVpcmUoJ2ludmFyaWFudCcpO1xuXG5pbXBvcnQgdHlwZSBFbWl0dGVyU3Vic2NyaXB0aW9uIGZyb20gJy4uL3ZlbmRvci9lbWl0dGVyL0VtaXR0ZXJTdWJzY3JpcHRpb24nO1xuXG50eXBlIE5hdGl2ZU1vZHVsZSA9IHtcbiAgK2FkZExpc3RlbmVyOiAoZXZlbnRUeXBlOiBzdHJpbmcpID0+IHZvaWQsXG4gICtyZW1vdmVMaXN0ZW5lcnM6IChjb3VudDogbnVtYmVyKSA9PiB2b2lkLFxuICAuLi5cbn07XG5cbi8qKlxuICogQWJzdHJhY3QgYmFzZSBjbGFzcyBmb3IgaW1wbGVtZW50aW5nIGV2ZW50LWVtaXR0aW5nIG1vZHVsZXMuIFRoaXMgaW1wbGVtZW50c1xuICogYSBzdWJzZXQgb2YgdGhlIHN0YW5kYXJkIEV2ZW50RW1pdHRlciBub2RlIG1vZHVsZSBBUEkuXG4gKi9cbmNsYXNzIE5hdGl2ZUV2ZW50RW1pdHRlciBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG4gIF9uYXRpdmVNb2R1bGU6ID9OYXRpdmVNb2R1bGU7XG5cbiAgY29uc3RydWN0b3IobmF0aXZlTW9kdWxlOiA/TmF0aXZlTW9kdWxlKSB7XG4gICAgc3VwZXIoUkNURGV2aWNlRXZlbnRFbWl0dGVyLnNoYXJlZFN1YnNjcmliZXIpO1xuICAgIGlmIChQbGF0Zm9ybS5PUyA9PT0gJ2lvcycpIHtcbiAgICAgIGludmFyaWFudChuYXRpdmVNb2R1bGUsICdOYXRpdmUgbW9kdWxlIGNhbm5vdCBiZSBudWxsLicpO1xuICAgICAgdGhpcy5fbmF0aXZlTW9kdWxlID0gbmF0aXZlTW9kdWxlO1xuICAgIH1cbiAgfVxuXG4gIGFkZExpc3RlbmVyKFxuICAgIGV2ZW50VHlwZTogc3RyaW5nLFxuICAgIGxpc3RlbmVyOiBGdW5jdGlvbixcbiAgICBjb250ZXh0OiA/T2JqZWN0LFxuICApOiBFbWl0dGVyU3Vic2NyaXB0aW9uIHtcbiAgICBpZiAodGhpcy5fbmF0aXZlTW9kdWxlICE9IG51bGwpIHtcbiAgICAgIHRoaXMuX25hdGl2ZU1vZHVsZS5hZGRMaXN0ZW5lcihldmVudFR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuYWRkTGlzdGVuZXIoZXZlbnRUeXBlLCBsaXN0ZW5lciwgY29udGV4dCk7XG4gIH1cblxuICByZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnRUeXBlOiBzdHJpbmcpIHtcbiAgICBpbnZhcmlhbnQoZXZlbnRUeXBlLCAnZXZlbnRUeXBlIGFyZ3VtZW50IGlzIHJlcXVpcmVkLicpO1xuICAgIGNvbnN0IGNvdW50ID0gdGhpcy5saXN0ZW5lcnMoZXZlbnRUeXBlKS5sZW5ndGg7XG4gICAgaWYgKHRoaXMuX25hdGl2ZU1vZHVsZSAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9uYXRpdmVNb2R1bGUucmVtb3ZlTGlzdGVuZXJzKGNvdW50KTtcbiAgICB9XG4gICAgc3VwZXIucmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50VHlwZSk7XG4gIH1cblxuICByZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uOiBFbWl0dGVyU3Vic2NyaXB0aW9uKSB7XG4gICAgaWYgKHRoaXMuX25hdGl2ZU1vZHVsZSAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9uYXRpdmVNb2R1bGUucmVtb3ZlTGlzdGVuZXJzKDEpO1xuICAgIH1cbiAgICBzdXBlci5yZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE5hdGl2ZUV2ZW50RW1pdHRlcjtcbiJdfQ==