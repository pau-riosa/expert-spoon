0651060e2cd719f43690e8e0746b0e92
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DeprecatedColorPropType = require('./DeprecatedColorPropType');

var DeprecatedLayoutPropTypes = require('./DeprecatedLayoutPropTypes');

var DeprecatedShadowPropTypesIOS = require('./DeprecatedShadowPropTypesIOS');

var DeprecatedTransformPropTypes = require('./DeprecatedTransformPropTypes');

var ReactPropTypes = require('prop-types');

var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, {}, DeprecatedShadowPropTypesIOS, {}, DeprecatedTransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: DeprecatedColorPropType,
  borderColor: DeprecatedColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
  tintColor: DeprecatedColorPropType,
  opacity: ReactPropTypes.number,
  overlayColor: ReactPropTypes.string,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});

module.exports = ImageStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzLmpzIl0sIm5hbWVzIjpbIkRlcHJlY2F0ZWRDb2xvclByb3BUeXBlIiwicmVxdWlyZSIsIkRlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMiLCJEZXByZWNhdGVkU2hhZG93UHJvcFR5cGVzSU9TIiwiRGVwcmVjYXRlZFRyYW5zZm9ybVByb3BUeXBlcyIsIlJlYWN0UHJvcFR5cGVzIiwiSW1hZ2VTdHlsZVByb3BUeXBlcyIsInJlc2l6ZU1vZGUiLCJvbmVPZiIsImJhY2tmYWNlVmlzaWJpbGl0eSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyV2lkdGgiLCJudW1iZXIiLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsInRpbnRDb2xvciIsIm9wYWNpdHkiLCJvdmVybGF5Q29sb3IiLCJzdHJpbmciLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7OztBQUVBLElBQU1BLHVCQUF1QixHQUFHQyxPQUFPLENBQUMsMkJBQUQsQ0FBdkM7O0FBQ0EsSUFBTUMseUJBQXlCLEdBQUdELE9BQU8sQ0FBQyw2QkFBRCxDQUF6Qzs7QUFDQSxJQUFNRSw0QkFBNEIsR0FBR0YsT0FBTyxDQUFDLGdDQUFELENBQTVDOztBQUNBLElBQU1HLDRCQUE0QixHQUFHSCxPQUFPLENBQUMsZ0NBQUQsQ0FBNUM7O0FBQ0EsSUFBTUksY0FBYyxHQUFHSixPQUFPLENBQUMsWUFBRCxDQUE5Qjs7QUFFQSxJQUFNSyxtQkFBbUIscUJBQ3BCSix5QkFEb0IsTUFFcEJDLDRCQUZvQixNQUdwQkMsNEJBSG9CO0FBSXZCRyxFQUFBQSxVQUFVLEVBQUdGLGNBQWMsQ0FBQ0csS0FBZixDQUFxQixDQUNoQyxRQURnQyxFQUVoQyxTQUZnQyxFQUdoQyxPQUhnQyxFQUloQyxRQUpnQyxFQUtoQyxTQUxnQyxDQUFyQixDQUpVO0FBYXZCQyxFQUFBQSxrQkFBa0IsRUFBR0osY0FBYyxDQUFDRyxLQUFmLENBQXFCLENBQ3hDLFNBRHdDLEVBRXhDLFFBRndDLENBQXJCLENBYkU7QUFpQnZCRSxFQUFBQSxlQUFlLEVBQUVWLHVCQWpCTTtBQWtCdkJXLEVBQUFBLFdBQVcsRUFBRVgsdUJBbEJVO0FBbUJ2QlksRUFBQUEsV0FBVyxFQUFFUCxjQUFjLENBQUNRLE1BbkJMO0FBb0J2QkMsRUFBQUEsWUFBWSxFQUFFVCxjQUFjLENBQUNRLE1BcEJOO0FBcUJ2QkUsRUFBQUEsUUFBUSxFQUFHVixjQUFjLENBQUNHLEtBQWYsQ0FBcUIsQ0FDOUIsU0FEOEIsRUFFOUIsUUFGOEIsQ0FBckIsQ0FyQlk7QUE2QnZCUSxFQUFBQSxTQUFTLEVBQUVoQix1QkE3Qlk7QUE4QnZCaUIsRUFBQUEsT0FBTyxFQUFFWixjQUFjLENBQUNRLE1BOUJEO0FBZ0R2QkssRUFBQUEsWUFBWSxFQUFFYixjQUFjLENBQUNjLE1BaEROO0FBbUR2QkMsRUFBQUEsbUJBQW1CLEVBQUVmLGNBQWMsQ0FBQ1EsTUFuRGI7QUFvRHZCUSxFQUFBQSxvQkFBb0IsRUFBRWhCLGNBQWMsQ0FBQ1EsTUFwRGQ7QUFxRHZCUyxFQUFBQSxzQkFBc0IsRUFBRWpCLGNBQWMsQ0FBQ1EsTUFyRGhCO0FBc0R2QlUsRUFBQUEsdUJBQXVCLEVBQUVsQixjQUFjLENBQUNRO0FBdERqQixFQUF6Qjs7QUF5REFXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLG1CQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlID0gcmVxdWlyZSgnLi9EZXByZWNhdGVkQ29sb3JQcm9wVHlwZScpO1xuY29uc3QgRGVwcmVjYXRlZExheW91dFByb3BUeXBlcyA9IHJlcXVpcmUoJy4vRGVwcmVjYXRlZExheW91dFByb3BUeXBlcycpO1xuY29uc3QgRGVwcmVjYXRlZFNoYWRvd1Byb3BUeXBlc0lPUyA9IHJlcXVpcmUoJy4vRGVwcmVjYXRlZFNoYWRvd1Byb3BUeXBlc0lPUycpO1xuY29uc3QgRGVwcmVjYXRlZFRyYW5zZm9ybVByb3BUeXBlcyA9IHJlcXVpcmUoJy4vRGVwcmVjYXRlZFRyYW5zZm9ybVByb3BUeXBlcycpO1xuY29uc3QgUmVhY3RQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbmNvbnN0IEltYWdlU3R5bGVQcm9wVHlwZXMgPSB7XG4gIC4uLkRlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMsXG4gIC4uLkRlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MsXG4gIC4uLkRlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMsXG4gIHJlc2l6ZU1vZGU6IChSZWFjdFByb3BUeXBlcy5vbmVPZihbXG4gICAgJ2NlbnRlcicsXG4gICAgJ2NvbnRhaW4nLFxuICAgICdjb3ZlcicsXG4gICAgJ3JlcGVhdCcsXG4gICAgJ3N0cmV0Y2gnLFxuICBdKTogUmVhY3QkUHJvcFR5cGUkUHJpbWl0aXZlPFxuICAgICdjZW50ZXInIHwgJ2NvbnRhaW4nIHwgJ2NvdmVyJyB8ICdyZXBlYXQnIHwgJ3N0cmV0Y2gnLFxuICA+KSxcbiAgYmFja2ZhY2VWaXNpYmlsaXR5OiAoUmVhY3RQcm9wVHlwZXMub25lT2YoW1xuICAgICd2aXNpYmxlJyxcbiAgICAnaGlkZGVuJyxcbiAgXSk6IFJlYWN0JFByb3BUeXBlJFByaW1pdGl2ZTwndmlzaWJsZScgfCAnaGlkZGVuJz4pLFxuICBiYWNrZ3JvdW5kQ29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBib3JkZXJDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlcldpZHRoOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBvdmVyZmxvdzogKFJlYWN0UHJvcFR5cGVzLm9uZU9mKFtcbiAgICAndmlzaWJsZScsXG4gICAgJ2hpZGRlbicsXG4gIF0pOiBSZWFjdCRQcm9wVHlwZSRQcmltaXRpdmU8J3Zpc2libGUnIHwgJ2hpZGRlbic+KSxcblxuICAvKipcbiAgICogQ2hhbmdlcyB0aGUgY29sb3Igb2YgYWxsIHRoZSBub24tdHJhbnNwYXJlbnQgcGl4ZWxzIHRvIHRoZSB0aW50Q29sb3IuXG4gICAqL1xuICB0aW50Q29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBvcGFjaXR5OiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIC8qKlxuICAgKiBXaGVuIHRoZSBpbWFnZSBoYXMgcm91bmRlZCBjb3JuZXJzLCBzcGVjaWZ5aW5nIGFuIG92ZXJsYXlDb2xvciB3aWxsXG4gICAqIGNhdXNlIHRoZSByZW1haW5pbmcgc3BhY2UgaW4gdGhlIGNvcm5lcnMgdG8gYmUgZmlsbGVkIHdpdGggYSBzb2xpZCBjb2xvci5cbiAgICogVGhpcyBpcyB1c2VmdWwgaW4gY2FzZXMgd2hpY2ggYXJlIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIEFuZHJvaWRcbiAgICogaW1wbGVtZW50YXRpb24gb2Ygcm91bmRlZCBjb3JuZXJzOlxuICAgKiAgIC0gQ2VydGFpbiByZXNpemUgbW9kZXMsIHN1Y2ggYXMgJ2NvbnRhaW4nXG4gICAqICAgLSBBbmltYXRlZCBHSUZzXG4gICAqXG4gICAqIEEgdHlwaWNhbCB3YXkgdG8gdXNlIHRoaXMgcHJvcCBpcyB3aXRoIGltYWdlcyBkaXNwbGF5ZWQgb24gYSBzb2xpZFxuICAgKiBiYWNrZ3JvdW5kIGFuZCBzZXR0aW5nIHRoZSBgb3ZlcmxheUNvbG9yYCB0byB0aGUgc2FtZSBjb2xvclxuICAgKiBhcyB0aGUgYmFja2dyb3VuZC5cbiAgICpcbiAgICogRm9yIGRldGFpbHMgb2YgaG93IHRoaXMgd29ya3MgdW5kZXIgdGhlIGhvb2QsIHNlZVxuICAgKiBodHRwOi8vZnJlc2NvbGliLm9yZy9kb2NzL3JvdW5kZWQtY29ybmVycy1hbmQtY2lyY2xlcy5odG1sXG4gICAqXG4gICAqIEBwbGF0Zm9ybSBhbmRyb2lkXG4gICAqL1xuICBvdmVybGF5Q29sb3I6IFJlYWN0UHJvcFR5cGVzLnN0cmluZyxcblxuICAvLyBBbmRyb2lkLVNwZWNpZmljIHN0eWxlc1xuICBib3JkZXJUb3BMZWZ0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclRvcFJpZ2h0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW1hZ2VTdHlsZVByb3BUeXBlcztcbiJdfQ==