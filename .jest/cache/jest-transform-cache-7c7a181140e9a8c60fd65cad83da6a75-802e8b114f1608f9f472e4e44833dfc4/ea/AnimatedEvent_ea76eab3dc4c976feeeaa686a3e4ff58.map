{"version":3,"sources":["AnimatedEvent.js"],"names":["AnimatedValue","require","NativeAnimatedHelper","ReactNative","invariant","shouldUseNativeDriver","attachNativeEvent","viewRef","eventName","argMapping","eventMappings","traverse","value","path","__makeNative","push","nativeEventPath","animatedValueTag","__getNativeTag","key","concat","nativeEvent","viewTag","findNodeHandle","forEach","mapping","API","addAnimatedEventToView","detach","removeAnimatedEventFromView","AnimatedEvent","config","_listeners","_argMapping","console","warn","listener","__addListener","_callListeners","bind","_attachedEvent","__isNative","__DEV__","_validateMapping","callback","filter","args","recMapping","recEvt","setValue","mappingKey","idx","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst NativeAnimatedHelper = require('./NativeAnimatedHelper');\nconst ReactNative = require('../../Renderer/shims/ReactNative');\n\nconst invariant = require('invariant');\n\nconst {shouldUseNativeDriver} = require('./NativeAnimatedHelper');\n\nexport type Mapping = {[key: string]: Mapping, ...} | AnimatedValue;\nexport type EventConfig = {\n  listener?: ?Function,\n  useNativeDriver: boolean,\n  ...\n};\n\nfunction attachNativeEvent(\n  viewRef: any,\n  eventName: string,\n  argMapping: Array<?Mapping>,\n): {|detach: () => void|} {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n\n  const traverse = (value, path) => {\n    if (value instanceof AnimatedValue) {\n      value.__makeNative();\n\n      eventMappings.push({\n        nativeEventPath: path,\n        animatedValueTag: value.__getNativeTag(),\n      });\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.',\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  traverse(argMapping[0].nativeEvent, []);\n\n  const viewTag = ReactNative.findNodeHandle(viewRef);\n\n  if (viewTag != null) {\n    eventMappings.forEach(mapping => {\n      NativeAnimatedHelper.API.addAnimatedEventToView(\n        viewTag,\n        eventName,\n        mapping,\n      );\n    });\n  }\n\n  return {\n    detach() {\n      if (viewTag != null) {\n        eventMappings.forEach(mapping => {\n          NativeAnimatedHelper.API.removeAnimatedEventFromView(\n            viewTag,\n            eventName,\n            mapping.animatedValueTag,\n          );\n        });\n      }\n    },\n  };\n}\n\nclass AnimatedEvent {\n  _argMapping: Array<?Mapping>;\n  _listeners: Array<Function> = [];\n  _callListeners: Function;\n  _attachedEvent: ?{detach: () => void, ...};\n  __isNative: boolean;\n\n  constructor(argMapping: Array<?Mapping>, config: EventConfig) {\n    this._argMapping = argMapping;\n\n    if (config == null) {\n      console.warn('Animated.event now requires a second argument for options');\n      config = {};\n    }\n\n    if (config.listener) {\n      this.__addListener(config.listener);\n    }\n    this._callListeners = this._callListeners.bind(this);\n    this._attachedEvent = null;\n    this.__isNative = shouldUseNativeDriver(config);\n\n    if (__DEV__) {\n      this._validateMapping();\n    }\n  }\n\n  __addListener(callback: Function): void {\n    this._listeners.push(callback);\n  }\n\n  __removeListener(callback: Function): void {\n    this._listeners = this._listeners.filter(listener => listener !== callback);\n  }\n\n  __attach(viewRef: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be attached.',\n    );\n\n    this._attachedEvent = attachNativeEvent(\n      viewRef,\n      eventName,\n      this._argMapping,\n    );\n  }\n\n  __detach(viewTag: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be detached.',\n    );\n\n    this._attachedEvent && this._attachedEvent.detach();\n  }\n\n  __getHandler(): any | ((...args: any) => void) {\n    if (this.__isNative) {\n      return this._callListeners;\n    }\n\n    return (...args: any) => {\n      const traverse = (recMapping, recEvt, key) => {\n        if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {\n          recMapping.setValue(recEvt);\n        } else if (typeof recMapping === 'object') {\n          for (const mappingKey in recMapping) {\n            /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n             * comment suppresses an error when upgrading Flow's support for\n             * React. To see the error delete this comment and run Flow. */\n            traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n          }\n        }\n      };\n\n      if (!this.__isNative) {\n        this._argMapping.forEach((mapping, idx) => {\n          traverse(mapping, args[idx], 'arg' + idx);\n        });\n      }\n      this._callListeners(...args);\n    };\n  }\n\n  _callListeners(...args: any) {\n    this._listeners.forEach(listener => listener(...args));\n  }\n\n  _validateMapping() {\n    const traverse = (recMapping, recEvt, key) => {\n      if (typeof recEvt === 'number') {\n        invariant(\n          recMapping instanceof AnimatedValue,\n          'Bad mapping of type ' +\n            typeof recMapping +\n            ' for key ' +\n            key +\n            ', event value must map to AnimatedValue',\n        );\n        return;\n      }\n      invariant(\n        typeof recMapping === 'object',\n        'Bad mapping of type ' + typeof recMapping + ' for key ' + key,\n      );\n      invariant(\n        typeof recEvt === 'object',\n        'Bad event of type ' + typeof recEvt + ' for key ' + key,\n      );\n      for (const mappingKey in recMapping) {\n        traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n      }\n    };\n  }\n}\n\nmodule.exports = {AnimatedEvent, attachNativeEvent};\n"]}